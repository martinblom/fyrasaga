// Auto-generated from button.html.
// DO NOT EDIT.

library x_button;

import 'dart:html' as autogenerated;
import 'dart:svg' as autogenerated_svg;
import 'package:web_ui/web_ui.dart' as autogenerated;
import 'package:web_ui/observe/observable.dart' as __observe;
import 'package:web_ui/web_ui.dart';



      class ButtonSubmitComponent extends WebComponent {
  /** Autogenerated from the template. */

  /** CSS class constants. */
  static Map<String, String> _css = {".x-button":"x-button"};

  /** This field is deprecated, use getShadowRoot instead. */
  get _root => getShadowRoot("x-button");
  static final __shadowTemplate = new autogenerated.DocumentFragment.html('''
      
      <style>
.x-button {
  font-family: "ff-kievit-web-pro-1", "ff-kievit-web-pro-2", sans-serif;
  -webkit-border-radius: 4px;
  -moz-border-radius: 4px;
  border-radius: 4px;
  -moz-box-shadow: 0 1px 1px 0 rgba(255, 255, 255, 0.3) inset;
  -webkit-box-shadow: 0 1px 1px 0 rgba(255, 255, 255, 0.3) inset;
  box-shadow: 0 1px 1px 0 rgba(255, 255, 255, 0.3) inset;
  background: #3c60a4;
  background-repeat: no-repeat;
  background-image: -khtml-gradient(linear, left top, left bottom, from(#446fba), to(#3c60a4));
  background-image: -moz-linear-gradient(top, #446fba, #3c60a4);
  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0%, #446fba), color-stop(100%, #3c60a4));
  background-image: -webkit-linear-gradient(top, #446fba, #446fba 25%, #3c60a4);
  background-image: -o-linear-gradient(top, #446fba, #3c60a4);
  background-image: -ms-linear-gradient(#446fba, #3c60a4);
  background-image: linear-gradient(#446fba, #3c60a4);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=#446fba, endColorstr=#3c60a4, GradientType=0);
  border: 1px solid #265d84;
  color: #fff;
  cursor: pointer;
  font-size: 18px;
  letter-spacing: 0px;
  height: 40px;
  line-height: 40px;
  padding: 0 15px;
  text-align: center;
  text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.75);
  -webkit-transition: 0.1s linear all;
  -moz-transition: 0.1s linear all;
  -ms-transition: 0.1s linear all;
  -o-transition: 0.1s linear all;
  transition: 0.1s linear all;
}
.x-button:hover {
  background: #234b95;
}
.x-button:focus {
  outline: 5px auto -webkit-focus-ring-color;
  outline-offset: -2px;
}
.x-button:active {
  -webkit-transition: none;
  -moz-transition: none;
  -ms-transition: none;
  -o-transition: none;
  transition: none;
  -webkit-box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.25), 0 1px 2px rgba(0, 0, 0, 0.05);
  -moz-box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.25), 0 1px 2px rgba(0, 0, 0, 0.05);
  box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.25), 0 1px 2px rgba(0, 0, 0, 0.05);
  position: relative;
  top: 1px;
}
</style><button class="x-button q-x-button">
        <content></content>
      </button>
    ''');
  autogenerated.ButtonElement __e52;
  autogenerated.Template __t;

  void created_autogenerated() {
    var __root = createShadowRoot("x-button");
    __t = new autogenerated.Template(__root);
    __root.nodes.add(__shadowTemplate.clone(true));
    __e52 = __root.nodes[2];
    __t.oneWayBind(() => disabled, (e) { if (__e52.disabled != e) __e52.disabled = e; }, false, false);
    __t.oneWayBind(() => type, (e) { if (__e52.type != e) __e52.type = e; }, false, false);
    __t.create();
  }

  void inserted_autogenerated() {
    __t.insert();
  }

  void removed_autogenerated() {
    __t.remove();
    __t = __e52 = null;
  }

  /** Original code from the component. */

        String type = 'button';
        bool disabled = false;

        void focus() {
          getShadowRoot('x-button').query('.q-x-button').focus();
        }
      }
    
//@ sourceMappingURL=button.html.dart.map